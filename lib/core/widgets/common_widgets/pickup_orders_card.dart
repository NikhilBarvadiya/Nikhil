// ignore_for_file: deprecated_member_useimport 'package:flutter/material.dart';import 'package:font_awesome_flutter/font_awesome_flutter.dart';import 'package:fw_manager/controller/app_controller.dart';import 'package:fw_manager/core/theme/index.dart';import 'package:get/get.dart';class PickupOrdersCard extends StatefulWidget {  final String? header;  final String? time;  final String? dateTime;  final String? shopName;  final String? personName;  final String? number;  final String? address;  final String? otp;  final String? note;  final String? status;  final List? stopList;  final List? shopNameList;  final void Function()? textClick;  final void Function()? editClick;  final void Function()? itemClick;  final dynamic callIcon;  const PickupOrdersCard({    Key? key,    this.header,    this.time,    this.shopName,    this.personName,    this.textClick,    this.callIcon,    this.number,    this.address,    this.otp,    this.note,    this.status,    this.itemClick,    this.dateTime,    this.editClick,    this.stopList,    this.shopNameList,  }) : super(key: key);  @override  State<PickupOrdersCard> createState() => _PickupOrdersCardState();}class _PickupOrdersCardState extends State<PickupOrdersCard> {  @override  Widget build(BuildContext context) {    return Container(      decoration: BoxDecoration(        borderRadius: const BorderRadius.all(Radius.circular(9)),        border: Border.all(color: AppController().appTheme.primary1),      ),      child: Column(        crossAxisAlignment: CrossAxisAlignment.start,        mainAxisSize: MainAxisSize.min,        children: [          Container(            height: 50.0,            decoration: BoxDecoration(              borderRadius: const BorderRadius.only(                topLeft: Radius.circular(8),                topRight: Radius.circular(8),              ),              color: widget.status == "Complete"                  ? Colors.green                  : widget.status == "Cancelled"                      ? Colors.redAccent                      : widget.header == "Pickup"                          ? Theme.of(context).primaryColor                          : widget.header == "Drop"                              ? Theme.of(context).primaryColor                              : widget.status == "Running"                                  ? Colors.grey                                  : Theme.of(context).primaryColor.withOpacity(0.2),            ),            padding: const EdgeInsets.only(left: 10, right: 10),            child: Row(              children: [                Text(                  widget.header ?? '',                  style: AppCss.h1,                ).paddingOnly(right: 5),                Card(                  elevation: 1,                  color: widget.status == "Complete"                      ? Colors.white                      : widget.status == "Cancelled"                          ? Colors.white                          : widget.status == "Running"                              ? Colors.white                              : AppController().appTheme.primary1,                  child: Container(                    padding: const EdgeInsets.all(5),                    child: Row(                      children: [                        Icon(                          Icons.access_time_outlined,                          color: widget.status == "Complete"                              ? AppController().appTheme.primary1                              : widget.status == "Cancelled"                                  ? AppController().appTheme.primary1                                  : widget.status == "Running"                                      ? AppController().appTheme.primary1                                      : Colors.white,                          size: 15,                        ).paddingOnly(right: 2),                        Text(                          widget.time ?? '',                          style: AppCss.body1.copyWith(                            color: widget.status == "Complete"                                ? AppController().appTheme.primary1                                : widget.status == "Cancelled"                                    ? AppController().appTheme.primary1                                    : widget.status == "Running"                                        ? AppController().appTheme.primary1                                        : Colors.white,                          ),                        ),                      ],                    ),                  ),                ),                const Spacer(),                Card(                  elevation: 1,                  color: widget.status == "Pending"                      ? Colors.deepOrangeAccent                      : widget.status == "Running"                          ? Colors.white                          : widget.status == "Complete"                              ? Colors.white                              : widget.status == "Cancelled"                                  ? Colors.white                                  : Colors.transparent,                  child: Container(                    padding: const EdgeInsets.all(5),                    child: Text(                      widget.status ?? '',                      style: AppCss.body1.copyWith(                        color: widget.status == "Cancelled"                            ? AppController().appTheme.primary1                            : widget.status == "Complete"                                ? AppController().appTheme.primary1                                : widget.status == "Running"                                    ? AppController().appTheme.primary1                                    : Colors.white,                      ),                    ),                  ),                ),              ],            ),          ).paddingOnly(bottom: 5),          Container(            padding: const EdgeInsets.only(left: 10, right: 10),            child: Row(              crossAxisAlignment: CrossAxisAlignment.start,              children: [                Expanded(                  flex: 3,                  child: Text(                    widget.shopName ?? '',                    style: AppCss.h3.copyWith(color: Theme.of(context).primaryColor, fontSize: 15),                  ).paddingOnly(right: 5),                ),                Text(                  widget.personName ?? '',                  style: AppCss.h3,                ),              ],            ),          ),          Row(            children: [              TextButton.icon(                onPressed: widget.textClick,                icon: Icon(widget.callIcon, size: 18, color: AppController().appTheme.primary1),                label: Text(                  widget.number ?? '',                  style: AppCss.h3.copyWith(                    color: Colors.blue,                  ),                ).paddingOnly(top: 2),              ),              const Spacer(),              TextButton(                onPressed: widget.editClick,                child: Row(                  children: [                    Icon(FontAwesomeIcons.edit, size: 18, color: AppController().appTheme.primary1),                    Text(                      "Edit",                      style: AppCss.h3.copyWith(fontSize: 15),                    ).paddingOnly(top: 4, left: 4),                  ],                ),              ).paddingOnly(right: 5),            ],          ),          Container(            padding: const EdgeInsets.only(left: 10, right: 10),            child: Row(              crossAxisAlignment: CrossAxisAlignment.start,              children: [                Expanded(                  flex: 3,                  child: Row(                    crossAxisAlignment: CrossAxisAlignment.start,                    children: [                      const Icon(                        FontAwesomeIcons.addressCard,                        size: 16,                      ),                      const SizedBox(width: 10),                      Expanded(                        child: Text(                          widget.address ?? '',                          style: AppCss.h3.copyWith(fontSize: 15),                        ),                      ),                    ],                  ).paddingOnly(right: 5),                ),                Row(                  crossAxisAlignment: CrossAxisAlignment.start,                  children: [                    const Icon(                      FontAwesomeIcons.key,                      size: 16,                    ),                    const SizedBox(width: 5),                    Text(                      widget.otp ?? '',                      style: AppCss.h3.copyWith(fontSize: 15),                    ).paddingOnly(right: 5),                  ],                ),              ],            ),          ),          Container(            padding: const EdgeInsets.only(top: 10, left: 10, right: 10),            child: Row(              children: [                const Icon(                  FontAwesomeIcons.noteSticky,                  size: 16,                ),                const SizedBox(width: 10),                Text(                  widget.note ?? '',                  style: AppCss.h3.copyWith(fontSize: 15),                ).paddingOnly(right: 5),                const Spacer(),                const Icon(                  Icons.access_time_sharp,                  size: 16,                ),                const SizedBox(width: 10),                Text(                  widget.dateTime ?? '',                  style: AppCss.body1.copyWith(fontSize: 13),                ).paddingOnly(right: 5),              ],            ),          ),          for (int i = 1; i < widget.stopList!.length - 1; i++)            widget.header == "Pickup"                ? Container(                    padding: const EdgeInsets.only(top: 10, left: 10, right: 10),                    height: 50,                    child: Row(                      children: [                        Text(                          widget.stopList![i] == "Pickup"                              ? ""                              : widget.stopList![i] == "Drop"                                  ? ""                                  : widget.stopList![i] ?? '',                          style: AppCss.h3.copyWith(fontSize: 15),                        ).paddingOnly(right: 5),                        Text(                          widget.stopList![i] == "Pickup"                              ? ""                              : widget.stopList![i] == "Drop"                                  ? ""                                  : widget.shopNameList![i] ?? '',                          style: AppCss.h3.copyWith(fontSize: 15, color: Colors.blue),                        ),                      ],                    ),                  )                : Container(),          Container(            height: 50.0,            decoration: BoxDecoration(              borderRadius: const BorderRadius.only(                bottomLeft: Radius.circular(8),                bottomRight: Radius.circular(8),              ),              color: widget.status == "Complete"                  ? Colors.green                  : widget.status == "Cancelled"                      ? Colors.redAccent                      : widget.header == "Pickup"                          ? Theme.of(context).primaryColor                          : widget.header == "Drop"                              ? Theme.of(context).primaryColor                              : widget.status == "Running"                                  ? Colors.grey                                  : Theme.of(context).primaryColor.withOpacity(0.2),            ),            padding: const EdgeInsets.only(left: 10, right: 10),            child: Row(              children: [                Text(                  'Pick Package',                  style: AppCss.h1.copyWith(                      color: widget.header == "Pickup"                          ? Colors.white                          : widget.header == "Drop"                              ? Colors.white                              : AppController().appTheme.primary1),                ),                const Spacer(),                Card(                  elevation: 1,                  color: Colors.white,                  child: Container(                    padding: const EdgeInsets.all(2),                    child: TextButton(                      onPressed: widget.itemClick,                      child: Row(                        children: [                          Text(                            "Item : ",                            style: AppCss.h3.copyWith(                              color: AppController().appTheme.primary1,                            ),                          ).paddingOnly(top: 2),                          Text(                            "19 Items",                            style: AppCss.h3.copyWith(                              color: Theme.of(context).primaryColor,                            ),                          ).paddingOnly(top: 2),                        ],                      ),                    ),                  ),                ),              ],            ),          ).paddingOnly(top: 5),        ],      ),    ).paddingAll(8);  }}