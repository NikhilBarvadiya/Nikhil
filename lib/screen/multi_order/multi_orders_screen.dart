// ignore_for_file: must_be_immutable, avoid_types_as_parameter_names, non_constant_identifier_names, prefer_final_fieldsimport 'package:flutter/material.dart';import 'package:fw_manager/controller/app_controller.dart';import 'package:fw_manager/controller/common_controller.dart';import 'package:fw_manager/controller/multi_orders_controller.dart';import 'package:fw_manager/core/theme/index.dart';import 'package:fw_manager/core/widgets/common_widgets/common_button.dart';import 'package:fw_manager/core/widgets/common_widgets/order_address_card.dart';import 'package:fw_manager/core/widgets/common_widgets/searchable_list.dart';import 'package:get/get.dart';class MultiOrdersScreen extends StatelessWidget {  MultiOrdersController multiOrdersController = Get.put(MultiOrdersController());  CommonController _commonController = Get.find();  AppController appController = Get.put(AppController());  MultiOrdersScreen({Key? key}) : super(key: key);  @override  Widget build(BuildContext context) {    return GetBuilder<MultiOrdersController>(      builder: (_) => Padding(        padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 10),        child: Column(          children: [            if (multiOrdersController.isOpenOrder == false)              Column(                children: [                  Row(                    mainAxisAlignment: MainAxisAlignment.spaceBetween,                    children: [                      for (int i = 0; i < multiOrdersController.order.length; i++)                        GestureDetector(                          onTap: () => multiOrdersController.onChange(i),                          child: AnimatedContainer(                            height: 45,                            width: Get.width * 0.45,                            alignment: Alignment.center,                            duration: const Duration(milliseconds: 100),                            decoration: BoxDecoration(                              borderRadius: const BorderRadius.all(                                Radius.circular(8),                              ),                              border: Border.all(                                color: multiOrdersController.order[i]["isActive"]                                    ? Colors.transparent                                    : AppController().appTheme.primary1.withOpacity(.8),                                width: 1,                              ),                              color: multiOrdersController.order[i]["isActive"] ? AppController().appTheme.primary1.withOpacity(.8) : Colors.white,                            ),                            child: Text(                              multiOrdersController.order[i]["order"],                              style: AppCss.h1.copyWith(                                color: multiOrdersController.order[i]["isActive"] ? Colors.white : AppController().appTheme.primary1.withOpacity(.8),                              ),                            ),                          ),                        ),                    ],                  ),                  const SizedBox(height: 15),                  Row(                    mainAxisAlignment: MainAxisAlignment.spaceBetween,                    children: [                      const Text(                        "Filters",                        style: TextStyle(fontWeight: FontWeight.w600, fontSize: 20),                      ),                      IconButton(                        onPressed: () => multiOrdersController.onOpenTap(),                        icon: Icon(                          multiOrdersController.isOpenTap ? Icons.arrow_drop_down : Icons.arrow_drop_up_sharp,                        ),                      ),                    ],                  ),                  const Divider(                    color: Colors.grey,                  ),                  const SizedBox(height: 15),                ],              ),            Container(              child: multiOrdersController.isOpenTap == true                  ? Column(                      mainAxisSize: MainAxisSize.min,                      children: [                        GestureDetector(                          onTap: () {                            showBusinessModel(context);                          },                          child: Container(                            decoration: BoxDecoration(                              color: Colors.grey[200],                              border: Border(                                bottom: BorderSide(                                  color: Theme.of(context).primaryColor,                                  width: 1.0,                                ),                              ),                            ),                            padding: const EdgeInsets.all(10),                            child: Column(                              crossAxisAlignment: CrossAxisAlignment.start,                              children: [                                const Text(                                  "Business type",                                ),                                const SizedBox(height: 15),                                Row(                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,                                  crossAxisAlignment: CrossAxisAlignment.start,                                  children: [                                    const Expanded(                                      child: Text('Please Select'),                                    ),                                    Icon(                                      Icons.arrow_drop_down,                                      color: Theme.of(context).primaryColor,                                    ),                                  ],                                ),                              ],                            ),                          ),                        ),                        const SizedBox(height: 15),                        GestureDetector(                          onTap: () {                            showVendorModel(context);                          },                          child: Container(                            decoration: BoxDecoration(                              color: Colors.grey[200],                              border: Border(                                bottom: BorderSide(                                  color: Theme.of(context).primaryColor,                                  width: 1.0,                                ),                              ),                            ),                            padding: const EdgeInsets.all(10),                            child: Column(                              crossAxisAlignment: CrossAxisAlignment.start,                              children: [                                const Text(                                  "Vendor",                                ),                                const SizedBox(height: 15),                                Row(                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,                                  crossAxisAlignment: CrossAxisAlignment.start,                                  children: [                                    const Expanded(                                      child: Text('Please Select'),                                    ),                                    Icon(                                      Icons.arrow_drop_down,                                      color: Theme.of(context).primaryColor,                                    ),                                  ],                                ),                              ],                            ),                          ),                        ),                        const SizedBox(height: 15),                        GestureDetector(                          onTap: () {                            showAreaModel(context);                          },                          child: Container(                            decoration: BoxDecoration(                              color: Colors.grey[200],                              border: Border(                                bottom: BorderSide(                                  color: Theme.of(context).primaryColor,                                  width: 1.0,                                ),                              ),                            ),                            padding: const EdgeInsets.all(10),                            child: Column(                              crossAxisAlignment: CrossAxisAlignment.start,                              children: [                                const Text(                                  "Area",                                ),                                const SizedBox(height: 15),                                Row(                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,                                  crossAxisAlignment: CrossAxisAlignment.start,                                  children: [                                    const Expanded(                                      child: Text('Please Select'),                                    ),                                    Icon(                                      Icons.arrow_drop_down,                                      color: Theme.of(context).primaryColor,                                    ),                                  ],                                ),                              ],                            ),                          ),                        ),                        const SizedBox(height: 15),                        GestureDetector(                          onTap: () {                            showRouteModel(context);                          },                          child: Container(                            decoration: BoxDecoration(                              color: Colors.grey[200],                              border: Border(                                bottom: BorderSide(                                  color: Theme.of(context).primaryColor,                                  width: 1.0,                                ),                              ),                            ),                            padding: const EdgeInsets.all(10),                            child: Column(                              crossAxisAlignment: CrossAxisAlignment.start,                              children: [                                const Text(                                  "Route",                                ),                                const SizedBox(height: 15),                                Row(                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,                                  crossAxisAlignment: CrossAxisAlignment.start,                                  children: [                                    const Expanded(                                      child: Text('Please Select'),                                    ),                                    Icon(                                      Icons.arrow_drop_down,                                      color: Theme.of(context).primaryColor,                                    ),                                  ],                                ),                              ],                            ),                          ),                        ),                        const SizedBox(height: 15),                      ],                    )                  : Container(),            ),            Row(              mainAxisAlignment: MainAxisAlignment.spaceBetween,              children: [                const Text(                  "Order locations",                  style: TextStyle(fontWeight: FontWeight.w600, fontSize: 20),                ),                IconButton(                  onPressed: () => multiOrdersController.onOpenOrder(),                  icon: Icon(                    multiOrdersController.isOpenOrder ? Icons.arrow_drop_down : Icons.arrow_drop_up_sharp,                  ),                ),              ],            ),            multiOrdersController.isOpenOrder == true                ? TextFormField(                    onChanged: (search) {                      multiOrdersController.runFilter(                        search,                        "addressHeder",                      );                    },                    decoration: InputDecoration(                      fillColor: Colors.grey[200],                      labelText: 'Search',                      hintText: 'Enter Order location',                      suffixIcon: SizedBox(                        height: 50,                        width: 50,                        child: Icon(                          Icons.search,                          color: Theme.of(context).primaryColor,                        ),                      ),                      hintStyle: const TextStyle(fontSize: 15),                      labelStyle: const TextStyle(fontSize: 15, fontWeight: FontWeight.w600),                      filled: true,                      focusedBorder: UnderlineInputBorder(                        borderSide: BorderSide(                          color: Theme.of(context).primaryColor,                          width: 2,                        ),                      ),                    ),                  )                : Container(),            multiOrdersController.isOpenOrder == true                ? Expanded(                    child: ListView(                      padding: const EdgeInsets.only(top: 10),                      children: [                        ...multiOrdersController.resultList.map(                          (e) {                            return Row(                              crossAxisAlignment: CrossAxisAlignment.start,                              children: [                                Container(                                  height: 20,                                  alignment: Alignment.center,                                  margin: const EdgeInsets.only(top: 5),                                  child: Text(                                    e["_id"].toString(),                                    style: AppCss.h3.copyWith(                                      color: Colors.black,                                    ),                                  ),                                ),                                Expanded(                                  child: OrderAddressCard(                                    addressHeder: e["addressHeder"],                                    personName: e["personName"],                                    vendor: e["vendor"],                                    vendorName: e["vendorName"],                                    onTap: () {                                      e["delete"] = !e["delete"];                                      multiOrdersController.update();                                    },                                    deleteIcon: e["delete"] == true ? Icons.add : Icons.close,                                    deleteIconColor: e["delete"] == true ? appController.appTheme.green : Colors.redAccent,                                    cardColors: e["delete"] == true ? Colors.red[100] : Colors.white,                                  ),                                ),                              ],                            );                          },                        ).toList(),                      ],                    ),                  )                : Container(),            multiOrdersController.isOpenOrder == true                ? commonButton(                    onTap: () {                      multiOrdersController.onSelectedLocation();                    },                    text: "Selected location (5)",                    height: 50.0,                  )                : Container(),          ],        ),      ),    );  }  showBusinessModel(context) {    showModalBottomSheet<void>(      backgroundColor: Colors.transparent,      context: context,      isScrollControlled: true,      builder: (BuildContext context) {        return Container(          decoration: const BoxDecoration(            color: Colors.white,            borderRadius: BorderRadius.only(              topLeft: Radius.circular(10),              topRight: Radius.circular(10),            ),          ),          padding: MediaQuery.of(context).viewInsets,          child: SizedBox(            height: Get.height * 0.43,            child: SearchableListView(              isLive: false,              isOnSearch: false,              itemList: const [],              bindText: 'name',              bindValue: '_id',              labelText: 'Business type',              hintText: 'Please Select',              onSelect: (val, text) {                Navigator.pop(context);              },            ),          ),        );      },    );  }  showVendorModel(context) {    showModalBottomSheet<void>(      backgroundColor: Colors.transparent,      context: context,      isScrollControlled: true,      enableDrag: false,      builder: (BuildContext context) {        return Container(          margin: EdgeInsets.only(top: _commonController.statusBarHeight),          decoration: const BoxDecoration(            color: Colors.white,            borderRadius: BorderRadius.only(              topLeft: Radius.circular(10),              topRight: Radius.circular(10),            ),          ),          padding: MediaQuery.of(context).viewInsets,          child: SearchableListView(            isLive: false,            isOnSearch: true,            itemList: const [],            bindText: 'name',            bindValue: '_id',            labelText: 'Vendor',            hintText: 'Please Select',            onSelect: (val, text) {              Navigator.pop(context);            },          ),        );      },    );  }  showAreaModel(context) {    showModalBottomSheet<void>(      backgroundColor: Colors.transparent,      context: context,      isScrollControlled: true,      enableDrag: false,      builder: (BuildContext context) {        return Container(          margin: EdgeInsets.only(top: _commonController.statusBarHeight),          decoration: const BoxDecoration(            color: Colors.white,            borderRadius: BorderRadius.only(              topLeft: Radius.circular(10),              topRight: Radius.circular(10),            ),          ),          padding: MediaQuery.of(context).viewInsets,          child: SizedBox(            child: SearchableListView(              isLive: false,              isOnSearch: true,              itemList: const [],              bindText: 'name',              bindValue: '_id',              labelText: 'Area',              hintText: 'Please Select',              onSelect: (val, text) {                Navigator.pop(context);              },            ),          ),        );      },    );  }  showRouteModel(context) {    showModalBottomSheet<void>(      backgroundColor: Colors.transparent,      context: context,      isScrollControlled: true,      enableDrag: false,      builder: (BuildContext context) {        return Container(          margin: EdgeInsets.only(top: _commonController.statusBarHeight),          decoration: const BoxDecoration(            color: Colors.white,            borderRadius: BorderRadius.only(              topLeft: Radius.circular(10),              topRight: Radius.circular(10),            ),          ),          padding: MediaQuery.of(context).viewInsets,          child: SizedBox(            child: SearchableListView(              isLive: false,              isOnSearch: true,              itemList: const [],              bindText: 'name',              bindValue: '_id',              labelText: 'Route',              hintText: 'Please Select Route',              onSelect: (val, text) {                Navigator.pop(context);              },            ),          ),        );      },    );  }}