// ignore_for_file: prefer_final_fieldsimport 'package:flutter/material.dart';import 'package:fw_manager/controller/order_merge_controller.dart';import 'package:fw_manager/core/theme/index.dart';import 'package:fw_manager/core/widgets/common_bottom_sheet/common_bottom_sheet.dart';import 'package:fw_manager/core/widgets/common_widgets/common_button.dart';import 'package:fw_manager/core/widgets/common_widgets/common_merge_card.dart';import 'package:fw_manager/core/widgets/common_widgets/searchable_list.dart';import 'package:get/get.dart';class MergeScreen extends StatefulWidget {  const MergeScreen({Key? key}) : super(key: key);  @override  State<MergeScreen> createState() => _MergeScreenState();}class _MergeScreenState extends State<MergeScreen> {  final orderMergeController = Get.put(OrderMergeController());  @override  Widget build(BuildContext context) {    return GetBuilder<OrderMergeController>(      builder: (_) => Scaffold(        appBar: AppBar(          elevation: 1,          automaticallyImplyLeading: true,          foregroundColor: Colors.white,          title: const Text(            "Order Merge",            style: TextStyle(              fontSize: 20,            ),            textScaleFactor: 1,            textAlign: TextAlign.center,          ),        ),        body: Column(          children: [            GestureDetector(              onTap: () {                commonBottomSheet(                  context: context,                  widget: SearchableListView(                    isLive: false,                    isOnSearch: true,                    itemList: const [],                    bindText: 'name',                    bindValue: '_id',                    labelText: 'Order Merge',                    hintText: 'Please Select',                    onSelect: (val, text) {                      Navigator.pop(context);                    },                  ),                );              },              child: Container(                decoration: BoxDecoration(                  color: Colors.grey[200],                  border: Border(                    bottom: BorderSide(                      color: Theme.of(context).primaryColor,                      width: 1.0,                    ),                  ),                ),                padding: const EdgeInsets.all(10),                child: Column(                  crossAxisAlignment: CrossAxisAlignment.start,                  children: [                    const Text(                      "Select Pickup Point",                    ),                    const SizedBox(height: 15),                    Row(                      mainAxisAlignment: MainAxisAlignment.spaceBetween,                      crossAxisAlignment: CrossAxisAlignment.start,                      children: [                        const Expanded(                          child: Text('Please Select'),                        ),                        Icon(                          Icons.arrow_drop_down,                          color: Theme.of(context).primaryColor,                        ),                      ],                    ),                  ],                ),              ),            ),            Expanded(              child: ListView(                padding: const EdgeInsets.only(top: 10),                children: [                  ...orderMergeController.selectedOrders.map((e) {                    return Row(                      crossAxisAlignment: CrossAxisAlignment.start,                      children: [                        Container(                          height: 20,                          alignment: Alignment.center,                          margin: const EdgeInsets.only(top: 5),                          child: Text(                            e["_id"].toString(),                            style: AppCss.h3.copyWith(                              color: Colors.black,                            ),                          ),                        ),                        Expanded(                          child: CommonMergeCard(                            person: e["person"],                            personData: e["personData"],                            shortNo: e["shortNo"],                            address: e["address"],                            items: e["items"],                            onItems: () {                              orderMergeController.itemsController.text = e["items"].toString();                              showItemsModel(context);                            },                          ),                        ),                      ],                    );                  }).toList(),                ],              ),            ),            commonButton(              onTap: () {                orderMergeController.onAssignDriver();              },              text: "Assign Order",              height: 50.0,            ),          ],        ).paddingAll(10),      ),    );  }  showItemsModel(context) {    commonBottomSheet(      context: context,      widget: Column(        mainAxisAlignment: MainAxisAlignment.center,        crossAxisAlignment: CrossAxisAlignment.start,        children: [          Text(            'Items Count : ',            style: AppCss.h1,          ).paddingOnly(left: 5).marginOnly(bottom: 10),          Expanded(            child: ListView(              children: [                for (int i = 0; i < orderMergeController.selectedOrders[0]["items"].length; i++)                  Card(                    elevation: 5,                    shape: const RoundedRectangleBorder(                      borderRadius: BorderRadius.all(                        Radius.circular(8),                      ),                    ),                    child: Container(                      height: 50.0,                      decoration: const BoxDecoration(                        color: Colors.white,                        borderRadius: BorderRadius.all(                          Radius.circular(8),                        ),                      ),                      child: Container(                        alignment: Alignment.center,                        child: TextFormField(                          controller: orderMergeController.itemsController,                          readOnly: true,                          decoration: const InputDecoration(                            border: InputBorder.none,                            contentPadding: EdgeInsets.symmetric(horizontal: 15),                          ),                        ),                      ),                    ),                  ).marginOnly(bottom: 5),              ],            ),          ),          commonButton(            onTap: () {              Get.back();            },            text: "Back",            height: 50.0,          ),        ],      ).paddingAll(10),    );  }}